// <auto-generated />
using FFXIComp.Api;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace FFXIComp.Api.Migrations
{
    [DbContext(typeof(GearDbContext))]
    partial class GearDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("FFXIComp.Api.Models.GearItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("GearItemCategoryId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("GearItemCategoryId");

                    b.ToTable("GearItems");
                });

            modelBuilder.Entity("FFXIComp.Api.Models.GearItemCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("GearItemCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "1H"
                        },
                        new
                        {
                            Id = 2,
                            Name = "2H"
                        },
                        new
                        {
                            Id = 3,
                            Name = "H2H"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Shield"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Grip"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Instrument"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Bow"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Crossbow"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Gun"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Arrow"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Bolt"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Bullet"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Ammo"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Cloak"
                        },
                        new
                        {
                            Id = 15,
                            Name = "Thrown"
                        });
                });

            modelBuilder.Entity("FFXIComp.Api.Models.GearItemJob", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("GearItemId")
                        .HasColumnType("integer");

                    b.Property<int>("JobId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("JobId");

                    b.HasIndex("GearItemId", "JobId")
                        .IsUnique();

                    b.ToTable("GearItemJobs");
                });

            modelBuilder.Entity("FFXIComp.Api.Models.GearItemSlot", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("GearItemId")
                        .HasColumnType("integer");

                    b.Property<int>("GearSlotId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("GearSlotId");

                    b.HasIndex("GearItemId", "GearSlotId")
                        .IsUnique();

                    b.ToTable("GearItemSlots");
                });

            modelBuilder.Entity("FFXIComp.Api.Models.GearSlot", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("GearSlots");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Main"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Sub"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Range"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Ammo"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Head"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Neck"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Ear"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Body"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Hands"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Ring"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Back"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Waist"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Legs"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Feet"
                        });
                });

            modelBuilder.Entity("FFXIComp.Api.Models.GearStat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("GearItemId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Value")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("GearItemId");

                    b.ToTable("GearStats");
                });

            modelBuilder.Entity("FFXIComp.Api.Models.Job", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Abbreviation")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Jobs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Abbreviation = "WAR",
                            FullName = "Warrior"
                        },
                        new
                        {
                            Id = 2,
                            Abbreviation = "MNK",
                            FullName = "Monk"
                        },
                        new
                        {
                            Id = 3,
                            Abbreviation = "WHM",
                            FullName = "White Mage"
                        },
                        new
                        {
                            Id = 4,
                            Abbreviation = "BLM",
                            FullName = "Black Mage"
                        },
                        new
                        {
                            Id = 5,
                            Abbreviation = "RDM",
                            FullName = "Red Mage"
                        },
                        new
                        {
                            Id = 6,
                            Abbreviation = "THF",
                            FullName = "Thief"
                        },
                        new
                        {
                            Id = 7,
                            Abbreviation = "PLD",
                            FullName = "Paladin"
                        },
                        new
                        {
                            Id = 8,
                            Abbreviation = "DRK",
                            FullName = "Dark Knight"
                        },
                        new
                        {
                            Id = 9,
                            Abbreviation = "BST",
                            FullName = "Beastmaster"
                        },
                        new
                        {
                            Id = 10,
                            Abbreviation = "BRD",
                            FullName = "Bard"
                        },
                        new
                        {
                            Id = 11,
                            Abbreviation = "RNG",
                            FullName = "Ranger"
                        },
                        new
                        {
                            Id = 12,
                            Abbreviation = "SAM",
                            FullName = "Samurai"
                        },
                        new
                        {
                            Id = 13,
                            Abbreviation = "NIN",
                            FullName = "Ninja"
                        },
                        new
                        {
                            Id = 14,
                            Abbreviation = "DRG",
                            FullName = "Dragoon"
                        },
                        new
                        {
                            Id = 15,
                            Abbreviation = "SMN",
                            FullName = "Summoner"
                        },
                        new
                        {
                            Id = 16,
                            Abbreviation = "BLU",
                            FullName = "Blue Mage"
                        },
                        new
                        {
                            Id = 17,
                            Abbreviation = "COR",
                            FullName = "Corsair"
                        },
                        new
                        {
                            Id = 18,
                            Abbreviation = "PUP",
                            FullName = "Puppetmaster"
                        },
                        new
                        {
                            Id = 19,
                            Abbreviation = "DNC",
                            FullName = "Dancer"
                        },
                        new
                        {
                            Id = 20,
                            Abbreviation = "SCH",
                            FullName = "Scholar"
                        },
                        new
                        {
                            Id = 21,
                            Abbreviation = "GEO",
                            FullName = "Geomancer"
                        },
                        new
                        {
                            Id = 22,
                            Abbreviation = "RUN",
                            FullName = "Rune Fencer"
                        });
                });

            modelBuilder.Entity("FFXIComp.Api.Models.GearItem", b =>
                {
                    b.HasOne("FFXIComp.Api.Models.GearItemCategory", "Category")
                        .WithMany("GearItems")
                        .HasForeignKey("GearItemCategoryId");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("FFXIComp.Api.Models.GearItemJob", b =>
                {
                    b.HasOne("FFXIComp.Api.Models.GearItem", "GearItem")
                        .WithMany("GearItemJobs")
                        .HasForeignKey("GearItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FFXIComp.Api.Models.Job", "Job")
                        .WithMany("GearItemJobs")
                        .HasForeignKey("JobId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GearItem");

                    b.Navigation("Job");
                });

            modelBuilder.Entity("FFXIComp.Api.Models.GearItemSlot", b =>
                {
                    b.HasOne("FFXIComp.Api.Models.GearItem", "GearItem")
                        .WithMany("GearItemSlots")
                        .HasForeignKey("GearItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FFXIComp.Api.Models.GearSlot", "GearSlot")
                        .WithMany("GearItemSlots")
                        .HasForeignKey("GearSlotId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GearItem");

                    b.Navigation("GearSlot");
                });

            modelBuilder.Entity("FFXIComp.Api.Models.GearStat", b =>
                {
                    b.HasOne("FFXIComp.Api.Models.GearItem", "GearItem")
                        .WithMany("GearStats")
                        .HasForeignKey("GearItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GearItem");
                });

            modelBuilder.Entity("FFXIComp.Api.Models.GearItem", b =>
                {
                    b.Navigation("GearItemJobs");

                    b.Navigation("GearItemSlots");

                    b.Navigation("GearStats");
                });

            modelBuilder.Entity("FFXIComp.Api.Models.GearItemCategory", b =>
                {
                    b.Navigation("GearItems");
                });

            modelBuilder.Entity("FFXIComp.Api.Models.GearSlot", b =>
                {
                    b.Navigation("GearItemSlots");
                });

            modelBuilder.Entity("FFXIComp.Api.Models.Job", b =>
                {
                    b.Navigation("GearItemJobs");
                });
#pragma warning restore 612, 618
        }
    }
}
